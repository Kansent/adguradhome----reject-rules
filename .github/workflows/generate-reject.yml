name: Generate reject.txt

on:
  push:
    branches:
      - main
    paths:
      - "ruleset/**"
      - "convert.py"

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: pip install pyyaml

      - name: Generate AdGuard rules
        run: python convert.py

      - name: Commit to release branch (safe merge)
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # 确认文件存在
          if [ ! -f output/reject.txt ]; then
            echo "❌ Error: output/reject.txt not found"
            exit 1
          fi

          # 创建临时目录
          mkdir temp
          cp output/reject.txt temp/reject.txt

          # 拉取 release 分支完整内容
          git fetch origin release:release || git checkout -b release
          git checkout release

          # 恢复 release 分支的文件（包括上游生成的 txt）
          git pull origin release || true

          # 把新的 reject.txt 覆盖进来
          cp temp/reject.txt ./reject.txt
          rm -rf temp

          git add reject.txt

          # 检查是否有变化
          if git diff --cached --quiet; then
            echo "ℹ️ No changes detected, skipping commit."
          else
            git commit -m "Auto update reject.txt [skip ci]"
            git push origin release
          fi
