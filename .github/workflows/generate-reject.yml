name: Generate reject.txt

on:
  push:
    branches:
      - main
    paths:
      - "ruleset/**"
      - "convert.py"

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: pip install pyyaml

      - name: Generate AdGuard rules
        run: python convert.py

      - name: Merge into release branch safely
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          if [ ! -f output/reject.txt ]; then
            echo "❌ Error: output/reject.txt not found"
            exit 1
          fi

          # 临时保存生成的文件
          mkdir -p temp
          cp output/reject.txt temp/reject.txt

          # 拉取远程所有分支信息
          git fetch origin +refs/heads/*:refs/remotes/origin/*

          # 检查 release 分支是否存在
          if git show-ref --verify --quiet refs/remotes/origin/release; then
            echo "✅ Release branch exists, checking out"
            git checkout -B release origin/release
          else
            echo "🆕 Release branch does not exist, creating new"
            git checkout --orphan release
            git rm -rf . > /dev/null 2>&1 || true
          fi

          # 恢复旧文件（如果存在）
          git reset --hard origin/release || true

          # 复制新的 reject.txt
          cp temp/reject.txt ./reject.txt
          rm -rf temp

          git add reject.txt

          # 只在文件有变化时提交
          if git diff --cached --quiet; then
            echo "ℹ️ No changes detected, skip commit."
          else
            git commit -m "Auto update reject.txt [skip ci]"
            git push origin release
          fi
